@model WebTimKiemPhongTro.Models.TinDang

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.9.2/basic.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.9.2/min/dropzone.min.js"></script>
<div class="row">
@using (Ajax.BeginForm("EditTindang", "User", new AjaxOptions() { HttpMethod = "POST" }, new { id = "frmTaskSave", enctype = "multipart/form-data" }))
{
        <div class="col-sm-10 col-sm-offset-1 profiel-container">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.MaTin)
            @Html.AntiForgeryToken()
            <div class="clear">
                <br>
                @*<hr>*@
                <br>
                <div class="col-sm-offset-1 col-sm-10">
                    <div class="form-group">
                        <label>Tiêu Đề :</label>
                        @Html.EditorFor(model => model.TieuDe, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TieuDe, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-5 col-sm-offset-1 ">
                    <div class="form-group">
                        <label>Chuyên Mục :</label>
                        @Html.EditorFor(model => model.ChuyenMuc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ChuyenMuc, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Giá cho thue :</label>
                        @Html.EditorFor(model => model.GiaTien, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.GiaTien, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Quận</label>

                        <select id="lunchBegins" class="selectpicker" data-live-search="true" data-live-search-style="begins" title="Quận">
                            <option>Quận 1</option>
                            <option>Quân 2</option>
                            <option>Gò Vấp</option>
                            <option>Bình Thạnh</option>
                            <option>Quận 9</option>
                            <option>Thủ Đức</option>
                        </select>
                        @*<input name="website" type="text" class="form-control" placeholder="">*@
                    </div>
                </div>

                <div class="col-sm-5">
                    <div class="form-group">
                        <label>Diện Tích:</label>
                        @Html.EditorFor(model => model.DienTich, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DienTich, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Địa chỉ :</label>
                        @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(model => model.LoaiTin, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.HiddenFor(model => model.LoaiTin, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LoaiTin, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.HiddenFor(model => model.SoNgay, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.HiddenFor(model => model.SoNgay, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SoNgay, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(model => model.NgayDang, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.HiddenFor(model => model.NgayDang, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NgayDang, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.HiddenFor(model => model.MaNguoiDang, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.HiddenFor(model => model.MaNguoiDang, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MaNguoiDang, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

            </div>
            <div class="clear">
                <br>
                <hr>
                <br>
                <div class="col-sm-10 col-sm-offset-1">
                    <div class="form-group" style="font-style:unset">
                        Thông Tin Mô Tả
                    </div>
                    <div id="textarea">
                        @*@Html.TextAreaFor(model => model.MoTa, new { @cols = "100", @rows = "8", id = "txt_details" })*@
                        @Html.Raw(@Html.TextAreaFor(model => model.MoTa, new { @cols = "100", @rows = "8", id = "txt_details" }))
                        <br />
                    </div>

                </div>

            </div>

            <div class="clear">
                <hr />
                <br />
                <div class="container-fluid col-sm-10 col-sm-offset-1">
                    <div class="row">
                        <br />
                        <div class="picture-container">
                            <div class="picture">
                                <img src="~/Content/assets/img/uploadimage/@Model.Image" class="picture-src" id="wizardPicturePreview" title="" />
                                <label class="sr-only" for="description">chon:</label>
                                <input type="file" name="file" id="Upimg" multiple><br><br>
                                @Html.HiddenFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                            </div>
                            <h6>Choose Picture</h6>
                        </div>

                    </div>

                </div>
                <div class="col-sm-5 col-sm-offset-1">
                    <br>
                    <input type='submit' class='btn btn-finish btn-primary' name='finish' value='Save Change' />
                    <button style="color: white; background-color: #FDC600; border-color: #FDC600; border-radius: 1px; padding: 10px 20px; font-weight: 600; ">@Html.ActionLink("Cancel", "ProfileUser", new { id = Model.MaTin })</button>
                </div>
                <br>

            </div>
        </div>
}
</div>

<script type="text/javascript" src="~/lib/jquery/dist/jquery.js"></script>
@section scripts{
    <script src="https://cdn.ckeditor.com/ckeditor5/29.1.0/classic/ckeditor.js"></script>
    <script>
        ClassicEditor
            .create(document.querySelector('#txt_details'), {
                // toolbar: [ 'heading', '|', 'bold', 'italic', 'link' ]
            })
            .then(editor => {
                window.editor = editor;
            })
            .catch(err => {
                console.error(err.stack);
            });
    </script>
    <script>
    $(document).ready(function () {
        $('#frmTaskSave').submit(function (e) {
            var fdata = new FormData($('#frmTaskSave').get(0));
            var profilephoto = $('#Upimg').val();
            fdata.append("Upimg", profilephoto);
            var fileInput = document.getElementById('Upimg');
            if (fileInput.files.length > 0) {
                for (i = 0; i < fileInput.files.length; i++) {
                    var sfilename = fileInput.files[i].name;
                    let srandomid = Math.random().toString(36).substring(7);
                    fdata.append(sfilename, fileInput.files[i]);
                    var markup = "<tr id='" + srandomid + "'><td>" + sfilename + "</td><td><a href='#' onclick='DeleteFile(\"" + srandomid + "\",\"" + sfilename +
                        "\")'><span class='glyphicon glyphicon-remove red'></span></a></td></tr>"; // Binding the file name
                    // $("#FilesList tbody").append(markup);
                }
                fdata.append('files', profilephoto);
                var name = $('#Name').val();
                if (name) {
                    fdata.append("Name", name);
                    fdata.append("Upimg", profilephoto);
                    $.ajax({
                        type: "Post",
                        url: '@Url.Action("EditTindang", "User")',
                        data: fdata,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            $("#myModal").html(data);
                        }
                    });
                }
            }
        });
    });
    </script>
}










